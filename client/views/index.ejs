<%- include('partials/header') %>
<a-scene physics='driver: ammo; debug: true;' background="color: #FAFAFA">

    <!-- SETTINGS FOR LEFT AND RIGHT CONTROLLERS -->
    <a-mixin id="controller-l"
              
              super-hands="
                colliderEvent:raycaster-intersection;
                colliderEventProperty:els;
                colliderEndEvent:raycaster-intersection-cleared;
                colliderEndEventProperty:clearedEls;
              "
              teleport-controls="cameraRig: #cameraRig;
                teleportOrigin: #head;
                button: trigger; 
                curveShootingSpeed: 18; 
                landingMaxAngle: 60" 
                visible="true">
    </a-mixin>
      
    <a-mixin id="controller-r"
              raycaster="objects: [forcegraph], a-input, a-keyboard, a-button; showLine: true"
              super-hands="
                colliderEvent:raycaster-intersection;
                colliderEventProperty:els;
                colliderEndEvent:raycaster-intersection-cleared;
                colliderEndEventProperty:clearedEls;
              "
    >
    </a-mixin>
    <!-- END SETTINGS FOR CONTROLLERS-->

    <!-- BASIC CAMERA AND MOTION SETTINGS -->
    <a-entity id="cameraRig" movement-controls="constrainToNavMesh: true;" navigator="cameraRig: #cameraRig; cameraHead: #head; collisionEntities: .collision; ignoreEntities: .clickable" position="0 0 0" rotation="0 0 0">
        <!-- camera -->
        <a-entity id="head" camera="active: true" position="0 1.6 0" look-controls="pointerLockEnabled: true; reverseMouseDrag: true" >
          <!-- INFO TOOLTIP- STICK TO CAMERA VIEW -->
          <!--<a-text
            id="forcegraph-tooltip"
            position="-0.75 -1 -1.7"
            width="1"
            color="white"
            value="Hover for node info"
            rotation="-45 0 0"
          ></a-text>
          <a-entity
            position="-0.5 -1.1 -1.8"
            geometry="primitive: plane; height: 0.25; width: 1"
            material="color: #333333"
            text="color: white; anchor: left; font: sourcecodepro;"
            rotation="-45 0 0"
          ></a-entity>-->
        </a-entity>
              <!-- Left Controller  -->
              <!-- a-entity class="leftController" hand-controls="hand: left; handModelStyle: lowPoly; color: #15ACCF" teleport-controls="cameraRig: #cameraRig; teleportOrigin: #head; button: trigger; curveShootingSpeed: 18; landingMaxAngle: 60" visible="true"></a-entity>
              
              <a-entity class="rightController" hand-controls="hand: right; handModelStyle: lowPoly; color: #15ACCF" laser-controls raycaster="showLine: true; far: 10; interval: 0; objects: .clickable, a-link;" line="color: lawngreen; opacity: 0.5" visible="true"></a-entity-->
        <!-- <a-entity super-hands hand-controls="hand: left" class="leftController" mixin="controller-l"></a-entity>
        <a-entity super-hands hand-controls="hand: right" class='rightController' mixin="controller-r"></a-entity> -->

        <a-entity laser-controls="hand: right"></a-entity>
        
      </a-entity>

    <a-entity environment="preset: default"></a-entity>
    <a-entity light="type:directional; castShadow:true;" position="1 1 1"></a-entity>

    <!-- BASE PLATE FOR DISTANCE DESIGN 2m arm reach, 1m free space, 4m far-->
    <a-cylinder color="cyan" height="0.05" radius="4" position="0 0 0"></a-cylinder>   
    <a-cylinder color="gray" height="0.1" radius="2" position="0 0 0"></a-cylinder>
    <a-cylinder color="crimson" height="0.15" radius="1" position="0 0 0"></a-cylinder>
    <!-- END OF BASE PLATE  -->

    <!-- current node view -->
    <a-sphere id= "current_node" visible= "false" color="yellow" radius="0.2" position="0 1 1.5" shadow></a-sphere>
    <a-text
        id ="current_node_label"
        position="0.2 1.1 1.49"
        width="1"
        color="white"
        value="NO NODE SELECTED"
        rotation="0 180 0"
    ></a-text>
    <a-cylinder color="gray" height="0.05" radius="0.5" position="0 0.75 1.5" shadow></a-cylinder>

    <!-- node search view -->
    <a-keyboard is_open='true' position="-1.1 1 -1.4" rotation="-35 0 0" scale="1.5 1.5 1.5" physical-keyboard='true' ></a-keyboard>
    <a-input id='input-1' position="-0.5 1.7 -1.5" placeholder="Search for node" color="black" width="0.6"></a-input>
    <a-button id="go-button" position="0.1 1.7 -1.5" name="search" value="go" width='0.3' scale="0.5 0.5 0.5"></a-button>
    <a-cylinder color="gray" height="0.05" radius="0.5" position="0 0.95 -1.5" shadow></a-cylinder>

    <!-- NODE INFO VIEW -->
    <a-rounded color="#cccccc" opacity='0.9' position="-0.75 1 2" width="1" height="1" radius="0.05" rotation="0 110 0"></a-rounded>
    <a-rounded color="#cccccc" opacity='0.9' position="0.75 1 2" width="1" height="1" radius="0.05" rotation="0 45 0"></a-rounded>
    <a-rounded color="#cccccc" opacity='0.9' position="-0.5 1 2" width="1" height="1" radius="0.05" rotation="0 0 0"></a-rounded>

</a-scene>
<script type="text/javascript">
    var input1= document.querySelector('#input-1');
    var button = document.querySelector('#go-button');
    var str="";
    var keyboard = document.querySelector("a-keyboard");

    keyboard.addEventListener('input', (e)=>{
        str += e.detail;
        input1.setAttribute('value', str);
    });

    keyboard.addEventListener('backspace', (e)=>{
        str = str.slice(0, -1);
        input1.setAttribute('value', str);
    });

    button.addEventListener('click', ()=> {
        fetch('/node_search', {
                method: 'POST',
                headers: {'Content-Type':'application/json'},
                body: JSON.stringify({input: input1.value})
            })
            .then(res=>res.json())
            .then(res =>{
                console.log(res.data[0]);
                document.querySelector('#current_node').setAttribute('visible', res.data[0] ? "true":"false");
                document.querySelector('#current_node_label').setAttribute('value', res.data[0] ? `${res.data[0].name}`:"NO NODE FOUND");
            });
    });

</script>

<%- include('partials/footer') %>